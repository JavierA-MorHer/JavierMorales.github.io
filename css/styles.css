:root{
    --blanco: #FFFFFF;
    --oscuro: #212121;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #dfe9df;
}

html{
    font-size: 62.5%;
    box-sizing: border-box;/*nos ayuda con el box model*/
    scroll-snap-type: y mandatory ; /*para que el scroll tenga una animacion en el eje vertical (eje y) y mandatory te 
    manda a la seccion si o si, tambien existe proximity*/
}

.servicios, .navegacion-principal, .formulario{
    scroll-snap-align: center; /*alineacion del scroll en el centro*/
    scroll-snap-stop: always; /*stop = siempre para en esa seccion, ya sea servicios o navegacion*/
}

*, *:before, *:after { /* el asterisco se usa como selector universal, 
                         significa que selecciona todos los elementos
                         after se usa para crear pseudoelementos en html, los coloca despues
                         y before antes*/
    box-sizing: inherit;
  }

body{
    font-size: 16px; /* 1 rem = 10px*/
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%); 
    /* background-image con linear-gradient se usa para realizar un fondo degradado los parametros son:
        la direccion hacia donde va "TO TOP", el color que va a iniciar en el fondo y se coloca 0% porque
        va a empezar desde la parte de abajo, despues va el color al que va a llegar "Blanco" y 100% porque
        es en la parte superior
    */
}

.sombra{
    /*sacado de https://www.cssmatic.com/box-shadow*/
    -webkit-box-shadow: 3px 3px 12px -2px rgba(0,0,0,0.75);
    -moz-box-shadow: 3px 3px 12px -2px rgba(0,0,0,0.75);
    box-shadow: 3px 3px 12px -2px rgba(0,0,0,0.75);

    background-color: var(--blanco);/*color de fondo*/
    padding: 2rem;/*marco del elemento*/
    margin-bottom: 2rem;/*margen del elemento*/
    border-radius: .5rem; /*redondeado*/
}

h1{
    font-size: 3.8rem;
}

h2{
    font-size: 2.8rem;
}

h3{
    font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}

.titulo span{
    font-size: 2rem;
}

/*Utilidades*/ /*Utilidades son solo un valor x clase*/
.w-100{
    width: 100%;
}

@media(min-width: 768px){
 .w-100{
     width: auto;
 }
}

.alinear-derecha{
justify-content: flex-end;
}

.flex{
 display: flex;
}

.contenedor{
    max-width: 120rem; /*tomara los 1200px como maximo si estan disponibles*/
    margin: 0 auto;
}

.boton{
    background-color: var(--secundario); /*Color de fondo del boton*/
    color: var(--blanco); /*Color de letra del boton*/
    padding: 1rem 3rem; /*padding es el marco que rodea al boton 1rem arriba y abajo, 3rem derecha e izquierda*/
    margin-top: 1rem; /*margen de arriba*/
    font-size: 2rem; /*tamaño de la letra*/
    text-decoration: none; /* se usa para quitar subrayado tipico de color azul/morado sobre links*/
    text-transform: uppercase; /*se usa para poner en mayusculas o para poner en minusculas*/
    font-weight: bold; /*Letra en negritas*/
    border-radius: .5rem; /* Se usa para redondear las esquinas del boton*/
    width: 90%; /*para que ocupe el 90% de la pantalla*/
    text-align: center; /* alineacion del texto al centro*/
    border: none;
}

.boton:hover{
    cursor: pointer;/*para que apararezca la manita sobre el boton*/
}

@media (min-width: 480px) {
    .boton{
        width: auto;
    }
}

.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal{
    display :flex;
    flex-direction: column;
    }

@media (min-width: 768px) {
    .navegacion-principal{
        flex-direction:  row;
        justify-content: space-between; /*justify-center se usa para alinear horizontalmente*/

    }
}

.navegacion-principal a{
    display:block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem;
}

.navegacion-principal a:hover{ /*efecto de sobresalir en la barra de navegacion*/
    background-color: var(--primario);/*Efecto sobre palabras en amarillo*/
    color: var(--oscuro);/*Color de la letra al ser seleccionado*/
}

/*Diferentes media querie anchos de pantalla dependiendo el dispositivo
    480px  = moviles
    768px  = tablet
    1140px = laptop/computadora escritorio
    1440px 
*/

.hero{
    background-image: url(../img/hero.jpg);/*se usan .. para salir de una carpeta*/
    background-repeat: no-repeat; /*no-repeat se usa para que la img no se repite cuando la pantalla se aleje*/
    background-size: cover;/* cover toma todo el ancho y lo adapta a la imagen*/
    height: 450px;
    position: relative; /*fijamos la posicion para que sea tomada de referencia*/
}

.contenido-hero{
   position: absolute;/*con esto podemos movernos a lo largo de la referencia "hero"*/
   background-color: rgba(0,0,0,.5); /*rgba Red Green Blue Alpha(transparencia, valores de 0(muy tranparente) a 1(sin transparencia))*/
   width: 100%; /*width y height para abarcar toda la zona de hero*/
   height: 100%;

  /*Código para alinear vertical y horizontalmente*/
   display: flex; /*por default los va a colocar un elemento junto al otro */
   flex-direction: column;/*column hara que se ordene de arriba hacia abajo*/
    align-items: center;/*alinear al centro*/
    justify-content: center;


}

.contenido-hero h2,
.contenido-hero p{ /*Se selecciona h2 y el parrafo de contenido-hero
                    porque se le van a aplicar las mismas características*/

     color: var(--blanco); /*color usando la variable --blanco*/               

}

.contenido-hero .ubicacion{
    display: flex;
    align-items: flex-end; /*para alinear verticalmente hacia abajo flex-end*/
}




@media (min-width: 768px) {
    .servicios{
        display: grid; /*agrega el ccs grid: el contenido se agrega dentro de un area definida*/
        
        /*grid-template-columns: 300px 300px; en grid se puede trabajar en 2 dimensiones, de arriba hacia abajo e izq a derecha
        grid-template-rows: 200px 800px;
    
        grid: 200px 800px / 300px 300px; otra forma de escribir la parte de arriba, la primer parte son rows la segunda son columns*/
    
        grid-template-columns: repeat(3,1fr); /*1fr = 1 fraccion, del 100 toma 1 fraccion y como hay 3 fr lo divide entre 3*/
        column-gap: 1rem; /*agregar margenes en display grid*/
    }
}


.servicio{ /*alineamos los iconos*/
    display: flex;/*display flex los coloca uno despues de otro*/
    flex-direction: column;/*la direccion de columna*/
    align-items: center;/*alineados al centro, se usa align items ya que justify content queda inservible*/
}

.servicio p{
    line-height: 2; /*interlineado del texto*/
    text-align: center;/*alineacion del texto*/ 
}

.servicio h3{
    color:var(--secundario); /*color de texto*/
    font-weight: normal;
}

.servicio .iconos{
    height: 15rem; /*hacer un cuadrado con height y width de 15rem*/
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%; /*al aplicar esto al 50% logramos hacer un círculo perfecto ya que se redondean las esquina*/
    display: flex;
    justify-content: space-evenly;
    align-items: center; /*alinear verticalmente*/
}




.formulario {
    background-color: var(--gris);
    padding: 2rem;
    border-radius: 10px;
    scroll-snap-align: center;
    scroll-snap-stop: always;
}
@media (min-width:768px) {
    .formulario {
        max-width: 800px;
        margin: 0 auto;
    }
}

.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

.contenedor-campos {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

@media (min-width:480px) {
    .campo {
        display: flex;
        align-items: center;
    }
}
@media (min-width: 768px) {
    .campo{
        flex: 0 0 calc(50% - .5rem)
    }
}



.campo{
    margin-bottom: 1rem;


}

.campo label{
    color:(var(--blanco));
    font-weight: bold;
    margin-bottom:  .5rem;
    display: block;
}

.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

.enviar .boton{
width: 100%;
}


.campo:nth-child(3),.campo:nth-child(4){/*con ntch.child puedes elegir de entre clases que tengan el mismo nombre
    si pones 1 va a seleccionar el primero si pones 2 va a elegir los primeros dos*/

grid-column: 1 / 3; /*va desde la columna 1 a la columna 3, display grid divide en numeros las filas y columnas*/

}


